name: Build Project and push to docker

on:
  push:
    branches:
      - "master"

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        ref: ${{ github.head_ref }}   # checkout the correct branch name
        fetch-depth: 0                # fetch the whole repo history
        
    - name: Conventional Changelog Action
      id: changelog
      uses: TriPSs/conventional-changelog-action@v3
      with:
        github-token: ${{ secrets.GIT_TOKEN_ACTIONS }}
        output-file: "false"

    - name: Create Release
      uses: actions/create-release@v1
      if: ${{ steps.changelog.outputs.skipped == 'false' }}
      env:
        GITHUB_TOKEN: ${{ secrets.GIT_TOKEN_ACTIONS }}
      with:
        tag_name: ${{ steps.changelog.outputs.tag }}
        release_name: ${{ steps.changelog.outputs.tag }}
        body: ${{ steps.changelog.outputs.clean_changelog }}
    
    - name: Version Visual Studio SDK projects
      # You may pin to the exact commit or the version.
      # uses: roryprimrose/set-vs-sdk-project-version@2bbda74f2e13745ec2e128fd8f51e7dcaca840c7
      uses: roryprimrose/set-vs-sdk-project-version@v1.0.3
      with:
        # Maps to the Version element
        version: ${{steps.changelog.outputs.version}}
    
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1.7.2
      with:
        dotnet-version: 5.0.100
        
    - name: Install dependencies
      run: dotnet restore
      
    - name: Build
      run: dotnet build --configuration Release --no-restore
      
    - name: Test
      run: dotnet test --no-restore --verbosity normal
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
      
    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        
    - name: Build and push
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ERIK.Bot/Dockerfile 
        pull: true
        push: true
        cache-from: type=registry,ref=enes1/erik:latest
        cache-to: type=inline
        tags: enes1/erik:latest, enes1/erik:${{steps.changelog.outputs.version}}
